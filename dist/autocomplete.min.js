/**
 * @checkit/ck-autocomplete v2.0.0 (https://github.com/elektron-technology/ck-autocomplete)
 * Copyright 2019 Application Team (checkit.net)
 * Licensed under MIT
 */
!function(){"use strict";function e(r,s,l,o,c,u,e){var d=this;function p(){var e=s[0].querySelector(".angucomplete-dropdown");e.style.top=null,e.style.height=null}function a(){var e=r.pageYOffset+125,t=e+r.innerHeight-125-50,n=s[0].getBoundingClientRect().top,i=s[0].getBoundingClientRect().bottom,l=s[0].querySelector(".angucomplete-dropdown"),o=l.getBoundingClientRect().height-6;if(p(),d.positionTimer&&(u.cancel(d.positionTimer),d.positionTimer=null),t<i+o&&(l.style.top=(-o).toString()+"px",n-o<e)){var c=Math.abs(n-e),a=Math.abs(t-i);a<c?(l.style.top=(-(c-14)).toString()+"px",l.style.height=(c-8).toString()+"px"):(l.style.top=null,l.style.height=a.toString()+"px")}}function n(e){e?o.$broadcast("angucomplete-alt:clearInput",e):o.$broadcast("angucomplete-alt:clearInput")}function g(e,t){for(var n=(t=(t=t.replace(/\[(\w+)\]/g,".$1")).replace(/^\./,"")).split("."),i=0,l=n.length;i<l;++i){var o=n[i];if(!(o in e))return;e=e[o]}return e}o.loadMore=!1,d.limit=d.limit||10,d.displayField=d.displayField||"name",d.descriptionField=d.descriptionField||"",d.idField=d.idField||"id.entityId",d.minLength=d.minLength||0,d.textSearching=d.textSearching||e.getSearchingText(),d.textNoResults=d.textNoResults||e.getNoResultsText(),o.textLoadMore=d.textLoadMore||e.getLoadMoreText(),d.disableInput=d.disableInput||!1,d.clearOnNoSelection=d.clearOnNoSelection||!1,d.returnObject=d.returnObject||!1,d.listClass=d.listClass||"form-control",d.useCache=void 0===d.useCache||d.useCache,d.model&&d.findById&&d.findById({id:d.model}).then(function(e){d.initialDisplay=e[d.displayField]}),d.cache={},d.search=function(t){var e;t=t.toLowerCase().replace(/[-[\]{}()*+?.,\\/^$|#\s]/g,"\\$&");var n=0;d.exclusionList&&(n=d.exclusionList.length);var i=d.useCache&&0===n;e=i&&t in d.cache?c.resolve(d.cache[t]):d.onSearch({skip:0,limit:d.limit+1+n,term:t});return e.then(function(e){return i&&(d.cache[t]=angular.copy(e)),0<n&&(e=l("without")(e,d.exclusionList,function(e){return g(e,d.idField)})),e.length>d.limit?(o.loadMore=!0,e.length=d.limit):o.loadMore=!1,d.positionTimer&&u.cancel(d.positionTimer),d.positionTimer=u(a,d.positionTimeout),e})},d.onSelect=function(e){if(!e)return void(d.clearOnNoSelection&&(d.model=void 0));d.returnObject?d.model=e.originalObject:d.model=g(e.originalObject,d.idField);d.onSelected&&u(d.onSelected,0)},d.onChange=function(e){e||(d.model=void 0)},d.onFocusOut=function(){d.clearOnNoSelection&&!d.model&&n();p()},d.onFocusIn=function(){p(),d.positionTimer&&u.cancel(d.positionTimer);d.positionTimer=u(a,10*d.positionTimeout)},d.positionTimer=null,d.positionTimeout=100,o.$on("ck-autocomplete:clearInput",function(e,t){n(t),d.cache={}})}angular.module("ck-autocomplete",["angucomplete-alt"]).config(function(e){e.preAssignBindingsEnabled(!0)}).component("ckAutocomplete",{templateUrl:"/autocomplete.tpl.html",controller:e,bindings:{model:"=",onSearch:"&",onSelected:"&",limit:"@",findById:"&?",displayField:"@",descriptionField:"@",idField:"@",returnObject:"=?",placeholder:"@",minLength:"@",textSearching:"@",textNoResults:"@",textLoadMore:"@",clearOnNoSelection:"=?",clearSelected:"@",disableInput:"=?",exclusionList:"=",listClass:"@",elementId:"@",useCache:"<?",fieldRequired:"=?",fieldRequiredClass:"@?",inputName:"@?"}}),e.$inject=["$window","$element","$filter","$scope","$q","$timeout","ckAutocompleteConfig"]}(),function(){"use strict";angular.module("ck-autocomplete").factory("ckAutocompleteConfig",function(){var t="Searching...",n="No results",i="Too many results. Please narrow search";return{setSearchingText:function(e){t=e},setNoResultsText:function(e){n=e},setLoadMoreText:function(e){i=e},getSearchingText:function(){return t},getNoResultsText:function(){return n},getLoadMoreText:function(){return i}}})}(),angular.module("ck-autocomplete").run(["$templateCache",function(e){e.put("/autocomplete.list.tpl.html",'<div class="angucomplete-holder" ng-class="{\'angucomplete-dropdown-visible\': showDropdown}">\n  <input id="{{id}}_value" name="{{inputName}}" tabindex="{{fieldTabindex}}"\n         ng-class="{\'angucomplete-input-not-empty\': notEmpty}" ng-model="searchStr" ng-disabled="disableInput"\n         type="{{inputType}}" placeholder="{{placeholder}}" maxlength="{{maxlength}}" ng-focus="onFocusHandler()"\n         class="{{inputClass}}" ng-focus="resetHideResults()" ng-blur="hideResults($event)" autocapitalize="off"\n         autocorrect="off" autocomplete="nope" ng-change="inputChangeHandler(searchStr)"/>\n\n  <div id="{{id}}_dropdown" class="angucomplete-dropdown" ng-show="showDropdown">\n\n    <div class="angucomplete-searching" ng-show="searching" ng-bind="textSearching"></div>\n    <div class="angucomplete-searching" ng-show="!searching && (!results || results.length == 0)"\n         ng-bind="textNoResults"></div>\n\n    <div class="angucomplete-loadmore" disabled ng-show="!searching && $parent.loadMore">\n      {{ $parent.textLoadMore }}\n    </div>\n\n    <div class="angucomplete-row" ng-repeat="result in results" ng-click="selectResult(result)"\n         ng-mouseenter="hoverRow($index)" ng-class="{\'angucomplete-selected-row\': $index == currentIndex}">\n\n      <div class="angucomplete-title"><span class="angucomplete-checkit" ng-repeat="part in result.title" ng-class="{[matchClass]: part.match}">{{part.string}}</span></div>\n\n      <div ng-if="result.description && result.description.length > 0" class="angucomplete-description"><span\n              class="angucomplete-checkit"\n              ng-repeat="part in result.description" ng-click="selectResult(result)"\n              ng-class="{[matchClass]: part.match}">{{part.string}}</span></div>\n    </div>\n\n  </div>\n</div>\n'),e.put("/autocomplete.tpl.html",'<span class="autocomplete" angucomplete-alt\n    type="search"\n    ng-attr-id="{{ $ctrl.elementId || undefined }}"\n    placeholder="{{ $ctrl.placeholder }}"\n    minlength="{{ $ctrl.minLength }}"\n    text-searching="{{ $ctrl.textSearching }}"\n    text-no-results="{{ $ctrl.textNoResults }}"\n    template-url="/autocomplete.list.tpl.html"\n\n    remote-api-handler="$ctrl.search"\n    title-field="{{ $ctrl.displayField }}"\n    description-field="{{$ctrl.descriptionField}}"\n    initial-value="$ctrl.initialDisplay"\n\n    input-class="{{$ctrl.listClass}}"\n    match-class="angucomplete-highlight"\n    disable-input="$ctrl.disableInput"\n\n    selected-object="$ctrl.onSelect"\n    input-changed="$ctrl.onChange"\n    clear-selected="{{ $ctrl.clearSelected }}"\n\n    focus-out="$ctrl.onFocusOut()"\n    focus-in="$ctrl.onFocusIn()"\n\n    field-required="$ctrl.fieldRequired"\n    field-required-class="{{$ctrl.fieldRequiredClass}}"\n    input-name="{{$ctrl.inputName}}">\n</span>\n')}]),function(){"use strict";angular.module("ck-autocomplete").filter("without",function(){return function(e,t,l){return l=l||function(e){return e.id},t&&0<t.length?e.filter(function(n){var i=l(n);return!t.some(function(e){var t=l(e);return n===e||i&&t&&angular.equals(i,t)})}):e}})}();